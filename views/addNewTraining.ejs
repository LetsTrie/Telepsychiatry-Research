<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('./partials/vendorsTop')%>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css" />

  <link rel="stylesheet" href="/css/admin.css" />
  <title>Add New Training Session | Admin Panel</title>
</head>

<body>
  <section class="adminTest" style="min-height: 100vh; background: #ebebeb;">
    <header>
      <nav>
        <%- include('./partials/adminNavbar')%>
      </nav>
      <div class="blueDivider">
        <div class="smallText">
          <p><a href="#">Admin Panel</a> / Events</p>
        </div>
        <div class="bigText">
          <p>Add New Training Session</p>
        </div>
      </div>
    </header>
    <div class="twoBigSectionFlex">
      <div class="oneBigFatCat_wrapper">
        <div class="oneBigFatCat">
          <div class="addResource text-center my-2">
            <h1>Add Training Session</h1>
          </div>
          <div class="addResource_form">
            <div class="alert alert-danger text-center" id="alert"></div>
            <div class="alert alert-success text-center" id="alert-success" style="display: none;"></div>
            <form action="/admin/training/new/file" id="form" enctype="multipart/form-data" method="POST">
              <input type="hidden" name="filename" id="filename" />
              <input type="hidden" name="id" id="id" />
              <div class="one_box">
                <div class="box_header">
                  <p>Title:</p>
                </div>
                <div class="input_box">
                  <input type="text" name="title" id="title" placeholder="Title" />
                </div>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>Brief Description:</p>
                </div>
                <div class="input_box">
                  <textarea name="BriefDesciption" id="BDeditor"> </textarea>
                </div>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>About</p>
                </div>
                <div class="input_box">
                  <textarea name="BriefDesciption" id="About"> </textarea>
                </div>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>Promotional Video</p>
                </div>
                <div class="input_box video-input">
                  <div class="each-video">
                    <input type="text" style="width: 80%;" class="video" />
                    <button class="btn btn-danger">Delete</button>
                  </div>
                </div>
                <button style="margin-top: 20px;" class="btn btn-secondary add-video">
                  Add
                </button>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>Doctors:</p>
                </div>
                <input type="text" id="doctorCnt" name="doctorCnt" value="0" style="display: none;" />
                <input type="text" id="doctorTotalCnt" value="0" style="display: none;" />
                <div id="doctorAddPlace"></div>
                <button type="button" class="btn btn-secondary" onclick="addDoctor()">
                  Add doctor
                </button>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>Event Location</p>
                </div>
                <div class="input_box">
                  <input name="location" id="location" placeholder="Location of the event" />
                </div>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>Event Date and Time</p>
                </div>
                <div class="input_box">
                  <div class="side-by-side">
                    <input type="text" name="date" placeholder="Start Date" class="side" id="startDate" />
                    <input type="text" name="time" class="side" placeholder="Start Time" id="startTime" />
                    <input type="text" name="date" class="side" placeholder="End Date" id="endDate" />
                    <input type="text" name="time" class="side" placeholder="End Time" id="endTime" />
                  </div>
                </div>
              </div>

              <div class="one_box">
                <div class="box_header">
                  <p>Representational Photo</p>
                </div>
                <div class="input_box">
                  <input type="file" name="trainingFile" id="file" accept="image/x-png,image/jpg,image/jpeg" />
                </div>
              </div>

              <div class="createResources__submit">
                <button id="submit-btn">Submit</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </section>
  <%- include('./partials/footer')%>
</body>
<%- include('./partials/vendorsBottom')%>
<script src="https://cdn.ckeditor.com/4.13.0/standard-all/ckeditor.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>

<script>
  $('input[name="date"]').datepicker();
  $('input[name="time"]').timepicker();

  // let bdeditor;

  // ClassicEditor.create(document.querySelector('#BDeditor'))
  //     .then((editor) => {
  //         bdeditor = editor;
  //         console.log(editor);
  //     })
  //     .catch((error) => {
  //         console.error(error);
  //     });
  var config = {
    height: 600,
    width: 900,
    extraPlugins: 'embed,autoembed,image2',
    contentsCss: [
      'http://cdn.ckeditor.com/4.14.0/full-all/contents.css',
      'https://ckeditor.com/docs/vendors/4.14.0/ckeditor/assets/css/widgetstyles.css',
    ],
    embed_provider:
      '//ckeditor.iframe.ly/api/oembed?url={url}&callback={callback}',
    image2_alignClasses: [
      'image-align-left',
      'image-align-center',
      'image-align-right',
    ],
    image2_disableResizer: true,
  };
  const editor = CKEDITOR.replace('BDeditor', config);
  CKEDITOR.replace('About', config);

  $('#submit-btn').click((e) => {
    e.preventDefault();
    const title = $('#title').val();
    const about = CKEDITOR.instances.About.getData();
    const description = CKEDITOR.instances.BDeditor.getData();
    const location = $('#location').val();
    const startDate = $('#startDate').val();
    const startTime = $('#startTime').val();
    const endDate = $('#endDate').val();
    const endTime = $('#endTime').val();
    const imageFile = $('#reqpPhotoID');

    const videoArr = $('.video');
    let videos = [];
    for (let i = 0; i < videoArr.length; i++) {
      const link = $(videoArr[i]).val();
      videos.push(link);
    }

    const docs = $('.doctorClass')
    let doctors = []
    for (let i = 0; i < docs.length; i++) {
      doctors.push($(docs[i]).val())
    }
    console.log(doctors)

    if (check(title)) {
      showAlert('Enter the title');
    } else if (check(description)) {
      showAlert('Enter a brief description');
    } else if (check(about)) {
      showAlert('Enter something in the about section');
    } else if (check(location)) {
      showAlert('Enter the location');
    } else if (check(startDate)) {
      showAlert('Enter the starting date');
    } else if (check(startTime)) {
      showAlert('Enter the starting time');
    } else if (check(endDate)) {
      showAlert('Enter the ending date');
    } else if (check(endTime)) {
      showAlert('Enter the ending time');
    } else if ($('#file')[0].files.length == 0) {
      showAlert('Enter the representational photo');
    } else {
      const image =
        Date.parse(new Date().toString()) + '-' + $('#file')[0].files[0].name;
      $('#filename').val(image);
      $('#alert').hide();
      schedule = {
        startDate,
        startTime,
        endDate,
        endTime,
      };
      const data = {
        title,
        description,
        about,
        videos: JSON.stringify(videos),
        doctors: JSON.stringify(doctors),
        location,
        schedule: JSON.stringify(schedule),
        image,
      };
      console.log(data);
      Submit(data);
    }
  });

  const check = (str) => {
    const res = str == '' || str == null || str == undefined;
    return res;
  };
  const showAlert = (msg) => {
    $('#alert').show();
    $('#alert').html(msg);
    $('html, body').animate(
      {
        scrollTop: 0,
      },
      'slow'
    );
  };
  const Submit = (data) => {
    $.ajax({
      type: 'POST',
      url: '/admin/training/new',
      data,
      success: (data) => {
        if (data.status) {
          $('html, body').animate(
            {
              scrollTop: 0,
            },
            'slow'
          );
          $('#alert-success').show();
          $('#alert-success').html('The training session is being added');
          $('#form').submit();
        }
      },
    });
  };

  $('.add-video').click((e) => {
    e.preventDefault();
    const node = ` <div class="each-video">
                      <input type="text" style="width: 80%;" class="video" />
                      <button class="btn btn-danger">Delete</button>
                    </div>
                  </div>`;
    $('.video-input').append(node);
  });

  $('body').on('click', '.btn-danger', (e) => {
    e.preventDefault();
    $(e.target.parentElement).remove();
  });

  // for adding doctors
  function addDoctor() {
    // doctorNo is actual present video count
    let doctorNo = parseInt($('#doctorCnt').val()) + 1;
    //doctorTotalNo its just for unique id
    let doctorTotalNo = parseInt($('#doctorTotalCnt').val()) + 1;
    $('#doctorCnt').val(doctorNo);
    $('#doctorTotalCnt').val(doctorTotalNo);

    $('#doctorAddPlace').replaceWith(
      '<div class="keyContactPersonWrapper" id="doctor' +
      doctorNo +
      '">' +
      '<div class="keyContactPerson">' +
      '<div class="input_box_flx_prnt">' +
      '<div class="input_box_flx_chld">' +
      '<input class="doctorClass" id="doctorName' +
      doctorNo +
      '" type="text" name="doctorName" placeholder="Doctor name">' +
      '</div>' +
      '<div class="input_box_flx_chld_btn">' +
      '<button type="button" class="btn btn-danger" onclick="deleteDoc(this.parentElement.parentElement.parentElement.parentElement.id)">Delete</button>' +
      '</div>' +
      '</div>' +
      '</div>' +
      '</div>' +
      '<div id="doctorAddPlace"></div>'
    );

    autocomplete(document.getElementById('doctorName' + doctorNo), doctors);
  }
  function deleteDoc(id) {
    let doctorNo = parseInt($('#doctorCnt').val()) - 1;
    $('#doctorCnt').val(doctorNo);
    console.log('parent id=' + id);
    $('#' + id + '').replaceWith('');
  }
  function autocomplete(inp, arr) {
    var currentFocus;
    inp.addEventListener('input', function (e) {
      var a,
        b,
        i,
        val = this.value;
      closeAllLists();
      if (!val) {
        return false;
      }
      currentFocus = -1;
      a = document.createElement('DIV');
      a.setAttribute('id', this.id + 'autocomplete-list');
      a.setAttribute('class', 'autocomplete-items');
      this.parentNode.appendChild(a);
      for (i = 0; i < arr.length; i++) {
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          b = document.createElement('DIV');
          b.innerHTML =
            '<strong>' + arr[i].substr(0, val.length) + '</strong>';
          b.innerHTML += arr[i].substr(val.length);
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          b.addEventListener('click', function (e) {
            inp.value = this.getElementsByTagName('input')[0].value;
            closeAllLists();
          });
          a.appendChild(b);
        }
      }
    });
    inp.addEventListener('keydown', function (e) {
      var x = document.getElementById(this.id + 'autocomplete-list');
      if (x) x = x.getElementsByTagName('div');
      if (e.keyCode == 40) {
        currentFocus++;
        addActive(x);
      } else if (e.keyCode == 38) {
        currentFocus--;
        addActive(x);
      } else if (e.keyCode == 13) {
        e.preventDefault();
        if (currentFocus > -1) {
          if (x) x[currentFocus].click();
        }
      }
    });
    function addActive(x) {
      if (!x) return false;
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = x.length - 1;
      x[currentFocus].classList.add('autocomplete-active');
    }
    function removeActive(x) {
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove('autocomplete-active');
      }
    }
    function closeAllLists(elmnt) {
      var x = document.getElementsByClassName('autocomplete-items');
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    document.addEventListener('click', function (e) {
      closeAllLists(e.target);
    });
  }
  var doctors;
  var docIDs;
  $.get('/admin/new/specialService/getExperts', (data) => {
    doctors = data.doctors;
    docIDs = data.docIDs;
  });
</script>

</html>